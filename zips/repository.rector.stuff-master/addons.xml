<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<addons>
<addon id="context.artwork.downloader.auto" name="Add missing artwork (only for Isengard)" version="1.0.4" provider-name="rmrector">
	<requires>
		<import addon="xbmc.addon" version="15.0.0" />
		<import addon="xbmc.python" version="2.20.0" />
	</requires>
	<extension point="kodi.context.item" library="context.py">
		<item>
			<label>32000</label>
			<visible>Container.Content(tvshows)|Container.Content(movies)|Container.Content(musicvideos)</visible>
			<parent>kodi.core.manage</parent>
		</item>
	</extension>
	<extension point="kodi.addon.metadata">
		<summary lang="en">Add missing artwork to the library for the selected item.</summary>
		<description lang="en">Adds all missing artwork configured in Artwork Beef for the selected item. This item is added to the 'Manage...' sub-menu. It also supports Artwork Downloader with a setting.</description>
		<source>https://github.com/rmrector/context.artwork.downloader.auto</source>
		<license>The MIT License</license>
		<disclaimer lang="en">Artwork Beef only needs this for Isengard.</disclaimer>
		<platform>all</platform>
		<language />
		<website />
		<forum />
		<email />
	</extension>
</addon>
<addon id="context.artwork.downloader.gui" name="Select artwork to add (only for Isengard)" version="1.0.4" provider-name="rmrector">
	<requires>
		<import addon="xbmc.addon" version="15.0.0" />
		<import addon="xbmc.python" version="2.20.0" />
	</requires>
	<extension point="kodi.context.item" library="context.py">
		<item>
			<label>32000</label>
			<visible>Container.Content(tvshows)|Container.Content(movies)|Container.Content(musicvideos)|Container.Content(episodes)</visible>
			<parent>kodi.core.manage</parent>
		</item>
	</extension>
	<extension point="kodi.addon.metadata">
		<summary lang="en">Show Artwork Beef GUI for the selected item.</summary>
		<description lang="en">Shows the Artwork Beef GUI for the selected item, allowing you to choose the exact artwork you want to add. This item is added to the 'Manage...' context menu. It also supports Artwork Downloader with a setting.</description>
		<source>https://github.com/rmrector/context.artwork.downloader.gui</source>
		<license>The MIT License</license>
		<disclaimer lang="en">Artwork Beef only needs this for Isengard.</disclaimer>
		<platform>all</platform>
		<language />
		<website />
		<forum />
		<email />
	</extension>
</addon>
<addon id="repository.rector.stuff" name="Rector Stuff" version="1.0.0" provider-name="rmrector">
	<requires>
		<import addon="xbmc.addon" version="12.0.0"/>
	</requires>
	<extension point="xbmc.addon.repository" name="Rector Repository">
		<info>https://raw.githubusercontent.com/rmrector/repository.rector.stuff/master/addons.xml</info>
		<checksum>https://raw.githubusercontent.com/rmrector/repository.rector.stuff/master/addons.xml.md5</checksum>
		<datadir zip="true">https://raw.githubusercontent.com/rmrector/repository.rector.stuff/master/</datadir>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">A little place for my stuff.</summary>
		<description lang="en">I'm Rector, I do stuff, I put it here.</description>
		<platform>all</platform>
		<disclaimer />
	</extension>
</addon>
<addon id="script.artwork.beef" name="Artwork Beef" version="0.26.0" provider-name="rmrector">
	<requires>
		<import addon="xbmc.python" version="2.19.0" />
		<import addon="xbmc.json" version="6.20.0" />
		<import addon="script.module.simplejson" version="3.3.0" />
		<import addon="script.module.requests" version="2.9.1" />
		<import addon="script.common.plugin.cache" version="2.5.8" />
	</requires>
	<extension point="xbmc.python.script" library="default.py">
		<provides>executable</provides>
	</extension>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<menu id="kodi.core.manage">
				<item library="context.py">
					<label>AB: $ADDON[script.artwork.beef 32410]</label>
					<visible>!Skin.HasSetting(disablecontext:script.artwork.beef) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)]</visible>
				</item>
				<item library="context_gui.py">
					<label>AB: $ADDON[script.artwork.beef 32411]</label>
					<visible>!Skin.HasSetting(disablecontext:script.artwork.beef) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)]</visible>
				</item>
				<item library="context_debug_remove.py">
					<label>AB: $ADDON[script.artwork.beef 32427]</label>
					<visible>Skin.HasSetting(enablecontext:script.artwork.beef.debug) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | StringCompare(ListItem.DBTYPE, season) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo) | StringCompare(ListItem.DBTYPE, season)]</visible>
				</item>
				<item library="context_debug_logitem.py">
					<label>AB: $ADDON[script.artwork.beef 32430]</label>
					<visible>Skin.HasSetting(enablecontext:script.artwork.beef.debug) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)]</visible>
				</item>
			</menu>
			<item library="context.py">
				<label>AB: $ADDON[script.artwork.beef 32410]</label>
				<visible>!Skin.HasSetting(disablecontext:script.artwork.beef) + [String.StartsWith(System.BuildVersion,18) | String.StartsWith(System.BuildVersion,19)] + [String.IsEqual(ListItem.DBTYPE, artist) | String.IsEqual(ListItem.DBTYPE, album) | String.IsEqual(ListItem.DBTYPE, song)]</visible>
			</item>
			<item library="context_gui.py">
				<label>AB: $ADDON[script.artwork.beef 32411]</label>
				<visible>!Skin.HasSetting(disablecontext:script.artwork.beef) + [String.StartsWith(System.BuildVersion,18) | String.StartsWith(System.BuildVersion,19)] + [String.IsEqual(ListItem.DBTYPE, artist) | String.IsEqual(ListItem.DBTYPE, album) | String.IsEqual(ListItem.DBTYPE, song)]</visible>
			</item>
			<item library="context_debug_remove.py">
				<label>AB: $ADDON[script.artwork.beef 32427]</label>
				<visible>Skin.HasSetting(enablecontext:script.artwork.beef.debug) + [String.StartsWith(System.BuildVersion,18) | String.StartsWith(System.BuildVersion,19)] + [String.IsEqual(ListItem.DBTYPE, artist) | String.IsEqual(ListItem.DBTYPE, album) | String.IsEqual(ListItem.DBTYPE, song)]</visible>
			</item>
			<item library="context_debug_logitem.py">
				<label>AB: $ADDON[script.artwork.beef 32430]</label>
				<visible>Skin.HasSetting(enablecontext:script.artwork.beef.debug) + [String.StartsWith(System.BuildVersion,18) | String.StartsWith(System.BuildVersion,19)] + [String.IsEqual(ListItem.DBTYPE, artist) | String.IsEqual(ListItem.DBTYPE, album) | String.IsEqual(ListItem.DBTYPE, song)]</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.service" start="login" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Automatically adds extra artwork for your media.</summary>
		<description lang="en">Artwork Beef automatically adds extra artwork for TV shows and movies into your library. It grabs them from wonderful web services and the file system.</description>
		<disclaimer lang="en">Artwork sources: fanart.tv, TheTVDB.com, The Movie Database, TheAudioDB, KyraDB</disclaimer>
		<summary lang="es">Agrega automÃ¡ticamente ilustraciones adicionales para sus medios.</summary>
		<description lang="es">Artwork Beef agrega automÃ¡ticamente ilustraciones adicionales para Series TV y PelÃ­culas a su biblioteca. Las ilustraciones son agregadas desde Servicios web y el Sistema de archivos local.</description>
		<disclaimer lang="es">Fuente para ilustraciones: fanart.tv, TheTVDB.com, The Movie Database, TheAudioDB, KyraDB</disclaimer>
		<news>v0.26.0 (2019-08-11)
- Feature: add settings to enable / disable each web service individually
- Fix: require both keys from users for KyraDB
- Fix: error with Jarvis / old urllib3

v0.25.0 - 0.25.2
- Feature: add 'animatedkeyart' from KyraDB
- Fix: match 'animatedposter' language for automated scanning
- Fix: identify and skip bad image results from TheTVDB
- Fix: add some general protection against a bit of web service parsing errors

v0.24.0 (2019-07-07)
- Feature: add KyraDB as an image provider
	- 'characterart', 'animatedposter', and 'animatedfanart' for movies
- Fix: error in error handling
		</news>
		<source>https://github.com/rmrector/script.artwork.beef</source>
		<forum>https://forum.kodi.tv/showthread.php?tid=258886</forum>
		<website>https://rmrector.github.io/script.artwork.beef/</website>
		<license>The MIT License</license>
		<platform>all</platform>
		<assets>
			<icon>icon.png</icon>
		</assets>
	</extension>
</addon>
<addon id="script.artwork.helper" name="Artwork Helper" version="0.9.1" provider-name="rrector">
	<requires>
		<import addon="xbmc.python" version="2.19.0" />
		<import addon="xbmc.json" version="6.20.0" />
		<import addon="xbmc.addon" version="17.0.0" />
	</requires>
	<extension point="xbmc.python.library" library="python/default.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Artwork Helper provides a couple of tools to skins and other add-ons for working with artwork.</summary>
		<description lang="en">Artwork Helper provides a couple of tools to skins and other add-ons for working with artwork. See README.md for detailed usage.</description>
		<disclaimer lang="en">Artwork Helper does not directly add functionality on its own and must be supported by skins or other add-ons.</disclaimer>
		<source>https://github.com/rmrector/script.artwork.helper</source>
		<forum>https://forum.kodi.tv/showthread.php?tid=236649</forum>
		<news>
v0.9.1 (2019-06-15)
- Fix: add an image mime type so Kodi identifies image URLs without extensions
- Fix: Kodi v19 Pyton 3 compatibility

v0.9.0 (2018-03-25)
- Feature: add a path to grab artwork from the currently playing item
- Feature: add path option to grab artwork from multiple artists

v0.8.0 (2017-11-08)
- Update for Leia compatibility, Krypton is now lowest supported
- remove `shuffle`
		</news>
		<license>The MIT License</license>
		<platform>all</platform>
		<language />
		<website />
		<email />
		<assets />
	</extension>
</addon>
<addon id="script.artwork.helper" name="Artwork Helper" version="0.7.1" provider-name="rrector">
	<requires>
		<import addon="xbmc.python" version="2.19.0" />
		<import addon="xbmc.json" version="6.20.0" />
	</requires>
	<extension point="xbmc.python.library" library="default.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Artwork Helper provides a couple of tools to skins and other add-ons for working with artwork.</summary>
		<description lang="en">Artwork Helper provides a couple of tools to skins and other add-ons for working with artwork. See README.md for detailed usage.</description>
		<disclaimer lang="en">Artwork Helper does not directly add functionality on its own and must be supported by skins or other add-ons.</disclaimer>
		<source>https://github.com/rmrector/script.artwork.helper</source>
		<forum>http://forum.kodi.tv/showthread.php?tid=236649</forum>
		<license>The MIT License</license>
		<platform>all</platform>
		<language />
		<website />
		<email />
	</extension>
</addon>
<addon id="script.playrandomvideos" name="Play Random Videos" version="1.2.1" provider-name="rmrector">
	<requires>
		<import addon="xbmc.addon" version="16.0.0" />
		<import addon="xbmc.python" version="2.20.0" />
		<import addon="script.module.simplejson" version="3.3.0"/>
	</requires>
	<extension point="kodi.context.item">
		<menu id="kodi.core.main">
			<item library="context.py">
				<label>32100</label>
				<visible>!Skin.HasSetting(disablecontext:script.playrandomvideos) + [Window.IsVisible(videos) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, season) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, season)] + ListItem.IsFolder + !ListItem.IsParentFolder + ![SubString(ListItem.FolderPath, plugin, Left) | SubString(ListItem.FolderPath, addons, Left) | SubString(ListItem.FolderPath, sources, Left) | String.StartsWith(ListItem.FolderPath, plugin) | String.StartsWith(ListItem.FolderPath, addons) | String.StartsWith(ListItem.FolderPath, sources)] + ![StringCompare(ListItem.FolderPath, add) | String.IsEqual(ListItem.FolderPath, add)]</visible>
			</item>
			<item library="context_single.py">
				<label>32099</label>
				<visible>Skin.HasSetting(enablecontext:script.playrandomvideos.single) + [Window.IsVisible(videos) | StringCompare(ListItem.DBTYPE, set) | StringCompare(ListItem.DBTYPE, tvshow) | StringCompare(ListItem.DBTYPE, season) | String.IsEqual(ListItem.DBTYPE, set) | String.IsEqual(ListItem.DBTYPE, tvshow) | String.IsEqual(ListItem.DBTYPE, season)] + ListItem.IsFolder + !ListItem.IsParentFolder + ![SubString(ListItem.FolderPath, plugin, Left) | SubString(ListItem.FolderPath, addons, Left) | SubString(ListItem.FolderPath, sources, Left) | String.StartsWith(ListItem.FolderPath, plugin) | String.StartsWith(ListItem.FolderPath, addons) | String.StartsWith(ListItem.FolderPath, sources)] + ![StringCompare(ListItem.FolderPath, add) | String.IsEqual(ListItem.FolderPath, add)]</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.python.library" library="script.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Plays random videos from all sorts of lists.</summary>
		<description lang="en">This add-on can quickly play random episodes from TV shows, movies from genres/sets/years/tags, and videos from playlists, the filesystem, and just about anything else, other than plugins.</description>
		<news>v1.2.1 (2018-06-22)
- Fix: error when playing some videos from file system
- Fix: support busy dialog changes in Kodi Leia
</news>
		<platform>all</platform>
		<source>https://github.com/rmrector/script.playrandomvideos</source>
		<forum>https://forum.kodi.tv/showthread.php?tid=238613</forum>
		<license>The MIT License</license>
		<disclaimer />
		<language />
		<website />
		<email />
	</extension>
</addon>
<addon id="service.stinger.notification" name="Stinger scene notification" version="1.0.3" provider-name="rmrector">
	<requires>
		<import addon="xbmc.python" version="2.19.0" />
		<import addon="script.module.simplejson" version="3.3.0" />
		<import addon="script.module.requests" version="2.9.1" />
	</requires>
	<extension point="xbmc.service" start="login" library="service.py" />
	<extension point="xbmc.addon.metadata">
		<summary lang="en">This service notifies you of stinger scenes in the currently playing movie.</summary>
		<description lang="en">This add-on notifies you of stinger scenes in the current movie, popping up a notification when the credits roll. It uses tags to identify movies that have a stinger scene, which can be automatically added by the Universal Movie Scraper from The Movie Database. It can also query the ChapterDb to identify the end credits if the media file does not have its own chapters.</description>
		<disclaimer lang="en">This add-on requires the tags 'aftercreditsstinger' and/or 'duringcreditsstinger' on movies with a stinger scene.</disclaimer>
		<news lang="en">v1.0.3 (2017-04-14)
- Work around Kodi bug introduced in Krypton when playing movie from Home window</news>
		<source>https://github.com/rmrector/service.stinger.notification</source>
		<forum>http://forum.kodi.tv/showthread.php?tid=254004</forum>
		<license>The MIT License</license>
		<platform>all</platform>
		<website />
		<language />
		<email />
	</extension>
</addon>
	<addon id="service.tweak.lastplayed" name="Watched status toolbox" version="0.6.4" provider-name="rmrector">
	<requires>
		<import addon="xbmc.python" version="2.20.0"/>
		<import addon="script.module.simplejson" version="3.3.0"/>
	</requires>
	<extension point="xbmc.service" start="login" library="service.py" />
	<extension point="kodi.context.item">
		<menu id="kodi.core.manage">
			<item library="context.py">
				<label>Mark as watched again</label>
				<visible>!Skin.HasSetting(disablecontext:service.tweak.lastplayed) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)] + Integer.IsGreater(ListItem.PlayCount, 0)</visible>
			</item>
			<item library="context_remove.py">
				<label>Remove one watch count</label>
				<visible>!Skin.HasSetting(disablecontext:service.tweak.lastplayed) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)] + Integer.IsGreater(ListItem.PlayCount, 1)</visible>
			</item>
			<item library="context_clearresume.py">
				<label>Clear resume status</label>
				<visible>!Skin.HasSetting(disablecontext:service.tweak.lastplayed) + [StringCompare(ListItem.DBTYPE, movie) | StringCompare(ListItem.DBTYPE, episode) | StringCompare(ListItem.DBTYPE, musicvideo) | String.IsEqual(ListItem.DBTYPE, movie) | String.IsEqual(ListItem.DBTYPE, episode) | String.IsEqual(ListItem.DBTYPE, musicvideo)] + ListItem.IsResumable</visible>
			</item>
		</menu>
	</extension>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Several tools to manage watched status and last played time.</summary>
		<description lang="en">Includes context items "Mark as watched again", "Remove one watch count", and "Clear resume status", all under "Manage...", and a service that changes the last played time for videos to update only if at least a small portion has actually been played, hopefully improving the usefulness of lists and add-ons using this timestamp.</description>
		<news lang="en">
v0.6.4 (2018-06-22)
- Fix: rework loop, improve behavior on Krypton and Leia
		</news>
		<platform>all</platform>
		<source>https://github.com/rmrector/service.tweak.lastplayed</source>
		<forum>https://forum.kodi.tv/showthread.php?tid=253816</forum>
		<license>The MIT License</license>
		<assets>
			<icon>icon.png</icon>
		</assets>
		<disclaimer />
		<website />
		<language />
		<email />
	</extension>
</addon>
<addon id="webinterface.devhelper" version="0.2.1" name="Devhelper web" provider-name="Ryan Rector">
	<requires>
		<import addon="xbmc.json" version="6.0.0"/>
	</requires>
	<extension point="xbmc.webinterface"/>
	<extension point="xbmc.addon.metadata">
		<summary lang="en">Development web interface</summary>
		<description lang="en">A web interface to help with design and development.</description>
		<news>
v0.2.1 (2018-09-17)
- Fix: too long "running data" requests for websockets, again

v0.2.0 (2018-09-13)
- Feature: settings to add or change additional script windows shown in "Visible windows"
- Feature: settings to configure artwork types shown in Video and Music art
- Feature: add settings to toggle JSON syntax highlighting
- Feature: add a 5 second delay option to Running Data
		</news>
		<platform>all</platform>
		<source>https://github.com/rmrector/webinterface.devhelper</source>
		<assets>
			<icon>icon.png</icon>
			<fanart></fanart>
			<screenshot>resources/screenshot1.jpg</screenshot>
			<screenshot>resources/screenshot2.jpg</screenshot>
		</assets>
	</extension>
</addon>
</addons>
